domain mars_rover_science_mission {


	pvariables {

		MAX-POWER___d1 : { non-fluent, real, default = 0.1 };
		MAX-POWER___d2 : { non-fluent, real, default = 0.1 };
		MAX-POWER___d3 : { non-fluent, real, default = 0.1 };
		MAX-POWER___d4 : { non-fluent, real, default = 0.1 };
		MAX-POWER___d5 : { non-fluent, real, default = 0.1 };
		MAX-POWER___d6 : { non-fluent, real, default = 0.1 };
		SCALE-FACTOR : { non-fluent, real, default = 0.1 };
		MINERAL-AREA___m1 : { non-fluent, real, default = 1 };
		MINERAL-AREA___m2 : { non-fluent, real, default = 1 };
		MINERAL-AREA___m3 : { non-fluent, real, default = 1 };
		MINERAL-AREA___m4 : { non-fluent, real, default = 1 };
		MINERAL-AREA___m5 : { non-fluent, real, default = 1 };
		MINERAL-AREA___m6 : { non-fluent, real, default = 1 };
		MINERAL-AREA___m7 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m1 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m2 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m3 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m4 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m5 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m6 : { non-fluent, real, default = 1 };
		MINERAL-VALUE___m7 : { non-fluent, real, default = 1 };
		MINERAL-POS-X___m1 : { non-fluent, real, default = 0 };
		MINERAL-POS-X___m2 : { non-fluent, real, default = 0 };
		MINERAL-POS-X___m3 : { non-fluent, real, default = 0 };
		MINERAL-POS-X___m4 : { non-fluent, real, default = 0 };
		MINERAL-POS-X___m5 : { non-fluent, real, default = 0 };
		MINERAL-POS-X___m6 : { non-fluent, real, default = 0 };
		MINERAL-POS-X___m7 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m1 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m2 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m3 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m4 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m5 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m6 : { non-fluent, real, default = 0 };
		MINERAL-POS-Y___m7 : { non-fluent, real, default = 0 };

		power___d1 : { interm-fluent, real };
		power___d2 : { interm-fluent, real };
		power___d3 : { interm-fluent, real };
		power___d4 : { interm-fluent, real };
		power___d5 : { interm-fluent, real };
		power___d6 : { interm-fluent, real };
		u-x___d1 : { interm-fluent, real };
		u-x___d2 : { interm-fluent, real };
		u-x___d3 : { interm-fluent, real };
		u-x___d4 : { interm-fluent, real };
		u-x___d5 : { interm-fluent, real };
		u-x___d6 : { interm-fluent, real };
		u-y___d1 : { interm-fluent, real };
		u-y___d2 : { interm-fluent, real };
		u-y___d3 : { interm-fluent, real };
		u-y___d4 : { interm-fluent, real };
		u-y___d5 : { interm-fluent, real };
		u-y___d6 : { interm-fluent, real };

		vel-x___d1 : { state-fluent, real, default = 0 };
		vel-x___d2 : { state-fluent, real, default = 0 };
		vel-x___d3 : { state-fluent, real, default = 0 };
		vel-x___d4 : { state-fluent, real, default = 0 };
		vel-x___d5 : { state-fluent, real, default = 0 };
		vel-x___d6 : { state-fluent, real, default = 0 };
		pos-x___d1 : { state-fluent, real, default = 0 };
		pos-x___d2 : { state-fluent, real, default = 0 };
		pos-x___d3 : { state-fluent, real, default = 0 };
		pos-x___d4 : { state-fluent, real, default = 0 };
		pos-x___d5 : { state-fluent, real, default = 0 };
		pos-x___d6 : { state-fluent, real, default = 0 };
		vel-y___d1 : { state-fluent, real, default = 0 };
		vel-y___d2 : { state-fluent, real, default = 0 };
		vel-y___d3 : { state-fluent, real, default = 0 };
		vel-y___d4 : { state-fluent, real, default = 0 };
		vel-y___d5 : { state-fluent, real, default = 0 };
		vel-y___d6 : { state-fluent, real, default = 0 };
		pos-y___d1 : { state-fluent, real, default = 0 };
		pos-y___d2 : { state-fluent, real, default = 0 };
		pos-y___d3 : { state-fluent, real, default = 0 };
		pos-y___d4 : { state-fluent, real, default = 0 };
		pos-y___d5 : { state-fluent, real, default = 0 };
		pos-y___d6 : { state-fluent, real, default = 0 };
		mineral-harvested___m1 : { state-fluent, bool, default = false };
		mineral-harvested___m2 : { state-fluent, bool, default = false };
		mineral-harvested___m3 : { state-fluent, bool, default = false };
		mineral-harvested___m4 : { state-fluent, bool, default = false };
		mineral-harvested___m5 : { state-fluent, bool, default = false };
		mineral-harvested___m6 : { state-fluent, bool, default = false };
		mineral-harvested___m7 : { state-fluent, bool, default = false };

		power-x___d1 : { action-fluent, real, default = 0 };
		power-x___d2 : { action-fluent, real, default = 0 };
		power-x___d3 : { action-fluent, real, default = 0 };
		power-x___d4 : { action-fluent, real, default = 0 };
		power-x___d5 : { action-fluent, real, default = 0 };
		power-x___d6 : { action-fluent, real, default = 0 };
		power-y___d1 : { action-fluent, real, default = 0 };
		power-y___d2 : { action-fluent, real, default = 0 };
		power-y___d3 : { action-fluent, real, default = 0 };
		power-y___d4 : { action-fluent, real, default = 0 };
		power-y___d5 : { action-fluent, real, default = 0 };
		power-y___d6 : { action-fluent, real, default = 0 };
		harvest___d1 : { action-fluent, bool, default = false };
		harvest___d2 : { action-fluent, bool, default = false };
		harvest___d3 : { action-fluent, bool, default = false };
		harvest___d4 : { action-fluent, bool, default = false };
		harvest___d5 : { action-fluent, bool, default = false };
		harvest___d6 : { action-fluent, bool, default = false };
	};

	cpfs {

		power___d1 = sqrt[pow[power-x___d1, 2] + pow[power-y___d1, 2]];

		power___d2 = sqrt[pow[power-x___d2, 2] + pow[power-y___d2, 2]];

		power___d3 = sqrt[pow[power-x___d3, 2] + pow[power-y___d3, 2]];

		power___d4 = sqrt[pow[power-x___d4, 2] + pow[power-y___d4, 2]];

		power___d5 = sqrt[pow[power-x___d5, 2] + pow[power-y___d5, 2]];

		power___d6 = sqrt[pow[power-x___d6, 2] + pow[power-y___d6, 2]];

		u-x___d1 = if (power___d1 >= MAX-POWER___d1)
			then ( ( MAX-POWER___d1 * power-x___d1 ) / power___d1 )
			else power-x___d1;

		u-x___d2 = if (power___d2 >= MAX-POWER___d2)
			then ( ( MAX-POWER___d2 * power-x___d2 ) / power___d2 )
			else power-x___d2;

		u-x___d3 = if (power___d3 >= MAX-POWER___d3)
			then ( ( MAX-POWER___d3 * power-x___d3 ) / power___d3 )
			else power-x___d3;

		u-x___d4 = if (power___d4 >= MAX-POWER___d4)
			then ( ( MAX-POWER___d4 * power-x___d4 ) / power___d4 )
			else power-x___d4;

		u-x___d5 = if (power___d5 >= MAX-POWER___d5)
			then ( ( MAX-POWER___d5 * power-x___d5 ) / power___d5 )
			else power-x___d5;

		u-x___d6 = if (power___d6 >= MAX-POWER___d6)
			then ( ( MAX-POWER___d6 * power-x___d6 ) / power___d6 )
			else power-x___d6;

		u-y___d1 = if (power___d1 >= MAX-POWER___d1)
			then ( ( MAX-POWER___d1 * power-y___d1 ) / power___d1 )
			else power-y___d1;

		u-y___d2 = if (power___d2 >= MAX-POWER___d2)
			then ( ( MAX-POWER___d2 * power-y___d2 ) / power___d2 )
			else power-y___d2;

		u-y___d3 = if (power___d3 >= MAX-POWER___d3)
			then ( ( MAX-POWER___d3 * power-y___d3 ) / power___d3 )
			else power-y___d3;

		u-y___d4 = if (power___d4 >= MAX-POWER___d4)
			then ( ( MAX-POWER___d4 * power-y___d4 ) / power___d4 )
			else power-y___d4;

		u-y___d5 = if (power___d5 >= MAX-POWER___d5)
			then ( ( MAX-POWER___d5 * power-y___d5 ) / power___d5 )
			else power-y___d5;

		u-y___d6 = if (power___d6 >= MAX-POWER___d6)
			then ( ( MAX-POWER___d6 * power-y___d6 ) / power___d6 )
			else power-y___d6;

		vel-x___d1' = vel-x___d1 + ( SCALE-FACTOR * u-x___d1 );

		vel-x___d2' = vel-x___d2 + ( SCALE-FACTOR * u-x___d2 );

		vel-x___d3' = vel-x___d3 + ( SCALE-FACTOR * u-x___d3 );

		vel-x___d4' = vel-x___d4 + ( SCALE-FACTOR * u-x___d4 );

		vel-x___d5' = vel-x___d5 + ( SCALE-FACTOR * u-x___d5 );

		vel-x___d6' = vel-x___d6 + ( SCALE-FACTOR * u-x___d6 );

		pos-x___d1' = pos-x___d1 + ( SCALE-FACTOR * vel-x___d1 );

		pos-x___d2' = pos-x___d2 + ( SCALE-FACTOR * vel-x___d2 );

		pos-x___d3' = pos-x___d3 + ( SCALE-FACTOR * vel-x___d3 );

		pos-x___d4' = pos-x___d4 + ( SCALE-FACTOR * vel-x___d4 );

		pos-x___d5' = pos-x___d5 + ( SCALE-FACTOR * vel-x___d5 );

		pos-x___d6' = pos-x___d6 + ( SCALE-FACTOR * vel-x___d6 );

		vel-y___d1' = vel-y___d1 + ( SCALE-FACTOR * u-y___d1 );

		vel-y___d2' = vel-y___d2 + ( SCALE-FACTOR * u-y___d2 );

		vel-y___d3' = vel-y___d3 + ( SCALE-FACTOR * u-y___d3 );

		vel-y___d4' = vel-y___d4 + ( SCALE-FACTOR * u-y___d4 );

		vel-y___d5' = vel-y___d5 + ( SCALE-FACTOR * u-y___d5 );

		vel-y___d6' = vel-y___d6 + ( SCALE-FACTOR * u-y___d6 );

		pos-y___d1' = pos-y___d1 + ( SCALE-FACTOR * vel-y___d1 );

		pos-y___d2' = pos-y___d2 + ( SCALE-FACTOR * vel-y___d2 );

		pos-y___d3' = pos-y___d3 + ( SCALE-FACTOR * vel-y___d3 );

		pos-y___d4' = pos-y___d4 + ( SCALE-FACTOR * vel-y___d4 );

		pos-y___d5' = pos-y___d5 + ( SCALE-FACTOR * vel-y___d5 );

		pos-y___d6' = pos-y___d6 + ( SCALE-FACTOR * vel-y___d6 );

		mineral-harvested___m1' = mineral-harvested___m1 | ( ( ~mineral-harvested___m1 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m1, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m1, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m1, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m1, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m1, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m1, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d6 ) ) );

		mineral-harvested___m2' = mineral-harvested___m2 | ( ( ~mineral-harvested___m2 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m2, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m2, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m2, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m2, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m2, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m2, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d6 ) ) );

		mineral-harvested___m3' = mineral-harvested___m3 | ( ( ~mineral-harvested___m3 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m3, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m3, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m3, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m3, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m3, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m3, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d6 ) ) );

		mineral-harvested___m4' = mineral-harvested___m4 | ( ( ~mineral-harvested___m4 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m4, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m4, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m4, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m4, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m4, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m4, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d6 ) ) );

		mineral-harvested___m5' = mineral-harvested___m5 | ( ( ~mineral-harvested___m5 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m5, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m5, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m5, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m5, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m5, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m5, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d6 ) ) );

		mineral-harvested___m6' = mineral-harvested___m6 | ( ( ~mineral-harvested___m6 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m6, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m6, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m6, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m6, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m6, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m6, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d6 ) ) );

		mineral-harvested___m7' = mineral-harvested___m7 | ( ( ~mineral-harvested___m7 ) ^ ( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m7, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d1 ) | ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m7, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d2 ) | ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m7, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d3 ) | ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m7, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d4 ) | ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m7, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d5 ) | ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m7, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d6 ) ) );
	};

	reward = ( ( -( ( pow[u-x___d1, 2] + pow[u-y___d1, 2] ) + ( pow[u-x___d2, 2] + pow[u-y___d2, 2] ) + ( pow[u-x___d3, 2] + pow[u-y___d3, 2] ) + ( pow[u-x___d4, 2] + pow[u-y___d4, 2] ) + ( pow[u-x___d5, 2] + pow[u-y___d5, 2] ) + ( pow[u-x___d6, 2] + pow[u-y___d6, 2] ) ) ) + ( ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m1, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m1 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m1, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m1 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m1, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m1 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m1, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m1 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m1, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m1 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m1, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m1, 2]] < MINERAL-AREA___m1 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m1 ) ))
			then MINERAL-VALUE___m1
			else 0.0 ) + ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m2, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m2 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m2, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m2 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m2, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m2 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m2, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m2 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m2, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m2 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m2, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m2, 2]] < MINERAL-AREA___m2 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m2 ) ))
			then MINERAL-VALUE___m2
			else 0.0 ) + ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m3, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m3 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m3, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m3 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m3, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m3 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m3, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m3 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m3, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m3 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m3, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m3, 2]] < MINERAL-AREA___m3 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m3 ) ))
			then MINERAL-VALUE___m3
			else 0.0 ) + ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m4, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m4 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m4, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m4 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m4, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m4 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m4, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m4 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m4, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m4 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m4, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m4, 2]] < MINERAL-AREA___m4 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m4 ) ))
			then MINERAL-VALUE___m4
			else 0.0 ) + ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m5, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m5 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m5, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m5 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m5, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m5 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m5, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m5 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m5, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m5 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m5, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m5, 2]] < MINERAL-AREA___m5 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m5 ) ))
			then MINERAL-VALUE___m5
			else 0.0 ) + ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m6, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m6 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m6, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m6 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m6, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m6 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m6, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m6 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m6, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m6 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m6, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m6, 2]] < MINERAL-AREA___m6 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m6 ) ))
			then MINERAL-VALUE___m6
			else 0.0 ) + ( if (( ( ( sqrt[pow[pos-x___d1 - MINERAL-POS-X___m7, 2] + pow[pos-y___d1 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d1 ) ^ ( ~mineral-harvested___m7 ) ) | ( ( ( sqrt[pow[pos-x___d2 - MINERAL-POS-X___m7, 2] + pow[pos-y___d2 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d2 ) ^ ( ~mineral-harvested___m7 ) ) | ( ( ( sqrt[pow[pos-x___d3 - MINERAL-POS-X___m7, 2] + pow[pos-y___d3 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d3 ) ^ ( ~mineral-harvested___m7 ) ) | ( ( ( sqrt[pow[pos-x___d4 - MINERAL-POS-X___m7, 2] + pow[pos-y___d4 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d4 ) ^ ( ~mineral-harvested___m7 ) ) | ( ( ( sqrt[pow[pos-x___d5 - MINERAL-POS-X___m7, 2] + pow[pos-y___d5 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d5 ) ^ ( ~mineral-harvested___m7 ) ) | ( ( ( sqrt[pow[pos-x___d6 - MINERAL-POS-X___m7, 2] + pow[pos-y___d6 - MINERAL-POS-Y___m7, 2]] < MINERAL-AREA___m7 ) ^ harvest___d6 ) ^ ( ~mineral-harvested___m7 ) ))
			then MINERAL-VALUE___m7
			else 0.0 ) ) ) - ( harvest___d1 + harvest___d2 + harvest___d3 + harvest___d4 + harvest___d5 + harvest___d6 );

	state-invariants {
		( MINERAL-AREA___m1 > 0 ) ^ ( MINERAL-AREA___m2 > 0 ) ^ ( MINERAL-AREA___m3 > 0 ) ^ ( MINERAL-AREA___m4 > 0 ) ^ ( MINERAL-AREA___m5 > 0 ) ^ ( MINERAL-AREA___m6 > 0 ) ^ ( MINERAL-AREA___m7 > 0 );
	};

	action-preconditions {
		( power-x___d1 >= ( -MAX-POWER___d1 ) ) ^ ( power-x___d2 >= ( -MAX-POWER___d2 ) ) ^ ( power-x___d3 >= ( -MAX-POWER___d3 ) ) ^ ( power-x___d4 >= ( -MAX-POWER___d4 ) ) ^ ( power-x___d5 >= ( -MAX-POWER___d5 ) ) ^ ( power-x___d6 >= ( -MAX-POWER___d6 ) );
		( power-x___d1 <= MAX-POWER___d1 ) ^ ( power-x___d2 <= MAX-POWER___d2 ) ^ ( power-x___d3 <= MAX-POWER___d3 ) ^ ( power-x___d4 <= MAX-POWER___d4 ) ^ ( power-x___d5 <= MAX-POWER___d5 ) ^ ( power-x___d6 <= MAX-POWER___d6 );
		( power-y___d1 >= ( -MAX-POWER___d1 ) ) ^ ( power-y___d2 >= ( -MAX-POWER___d2 ) ) ^ ( power-y___d3 >= ( -MAX-POWER___d3 ) ) ^ ( power-y___d4 >= ( -MAX-POWER___d4 ) ) ^ ( power-y___d5 >= ( -MAX-POWER___d5 ) ) ^ ( power-y___d6 >= ( -MAX-POWER___d6 ) );
		( power-y___d1 <= MAX-POWER___d1 ) ^ ( power-y___d2 <= MAX-POWER___d2 ) ^ ( power-y___d3 <= MAX-POWER___d3 ) ^ ( power-y___d4 <= MAX-POWER___d4 ) ^ ( power-y___d5 <= MAX-POWER___d5 ) ^ ( power-y___d6 <= MAX-POWER___d6 );
	};
}