domain hvac {


	pvariables {

		ADJ-ZONES___z1__z1 : { non-fluent, bool, default = false };
		ADJ-ZONES___z1__z2 : { non-fluent, bool, default = false };
		ADJ-ZONES___z1__z3 : { non-fluent, bool, default = false };
		ADJ-ZONES___z1__z4 : { non-fluent, bool, default = false };
		ADJ-ZONES___z1__z5 : { non-fluent, bool, default = false };
		ADJ-ZONES___z2__z1 : { non-fluent, bool, default = false };
		ADJ-ZONES___z2__z2 : { non-fluent, bool, default = false };
		ADJ-ZONES___z2__z3 : { non-fluent, bool, default = false };
		ADJ-ZONES___z2__z4 : { non-fluent, bool, default = false };
		ADJ-ZONES___z2__z5 : { non-fluent, bool, default = false };
		ADJ-ZONES___z3__z1 : { non-fluent, bool, default = false };
		ADJ-ZONES___z3__z2 : { non-fluent, bool, default = false };
		ADJ-ZONES___z3__z3 : { non-fluent, bool, default = false };
		ADJ-ZONES___z3__z4 : { non-fluent, bool, default = false };
		ADJ-ZONES___z3__z5 : { non-fluent, bool, default = false };
		ADJ-ZONES___z4__z1 : { non-fluent, bool, default = false };
		ADJ-ZONES___z4__z2 : { non-fluent, bool, default = false };
		ADJ-ZONES___z4__z3 : { non-fluent, bool, default = false };
		ADJ-ZONES___z4__z4 : { non-fluent, bool, default = false };
		ADJ-ZONES___z4__z5 : { non-fluent, bool, default = false };
		ADJ-ZONES___z5__z1 : { non-fluent, bool, default = false };
		ADJ-ZONES___z5__z2 : { non-fluent, bool, default = false };
		ADJ-ZONES___z5__z3 : { non-fluent, bool, default = false };
		ADJ-ZONES___z5__z4 : { non-fluent, bool, default = false };
		ADJ-ZONES___z5__z5 : { non-fluent, bool, default = false };
		TEMP-OUT : { non-fluent, real, default = 3 };
		ADJ-HEATER___h1__z1 : { non-fluent, bool, default = false };
		ADJ-HEATER___h1__z2 : { non-fluent, bool, default = false };
		ADJ-HEATER___h1__z3 : { non-fluent, bool, default = false };
		ADJ-HEATER___h1__z4 : { non-fluent, bool, default = false };
		ADJ-HEATER___h1__z5 : { non-fluent, bool, default = false };
		ADJ-HEATER___h2__z1 : { non-fluent, bool, default = false };
		ADJ-HEATER___h2__z2 : { non-fluent, bool, default = false };
		ADJ-HEATER___h2__z3 : { non-fluent, bool, default = false };
		ADJ-HEATER___h2__z4 : { non-fluent, bool, default = false };
		ADJ-HEATER___h2__z5 : { non-fluent, bool, default = false };
		ADJ-HEATER___h3__z1 : { non-fluent, bool, default = false };
		ADJ-HEATER___h3__z2 : { non-fluent, bool, default = false };
		ADJ-HEATER___h3__z3 : { non-fluent, bool, default = false };
		ADJ-HEATER___h3__z4 : { non-fluent, bool, default = false };
		ADJ-HEATER___h3__z5 : { non-fluent, bool, default = false };
		ADJ-HEATER___h4__z1 : { non-fluent, bool, default = false };
		ADJ-HEATER___h4__z2 : { non-fluent, bool, default = false };
		ADJ-HEATER___h4__z3 : { non-fluent, bool, default = false };
		ADJ-HEATER___h4__z4 : { non-fluent, bool, default = false };
		ADJ-HEATER___h4__z5 : { non-fluent, bool, default = false };
		ADJ-HEATER___h5__z1 : { non-fluent, bool, default = false };
		ADJ-HEATER___h5__z2 : { non-fluent, bool, default = false };
		ADJ-HEATER___h5__z3 : { non-fluent, bool, default = false };
		ADJ-HEATER___h5__z4 : { non-fluent, bool, default = false };
		ADJ-HEATER___h5__z5 : { non-fluent, bool, default = false };
		AIR-COST : { non-fluent, real, default = 0.05 };
		HEAT-COST___h1 : { non-fluent, real, default = 5.0 };
		HEAT-COST___h2 : { non-fluent, real, default = 5.0 };
		HEAT-COST___h3 : { non-fluent, real, default = 5.0 };
		HEAT-COST___h4 : { non-fluent, real, default = 5.0 };
		HEAT-COST___h5 : { non-fluent, real, default = 5.0 };
		ZONE-DISCOMFORT-PENALTY : { non-fluent, real, default = 20.0 };
		TEMP-ZONE-MIN : { non-fluent, real, default = 10 };
		TEMP-ZONE-MAX : { non-fluent, real, default = 15 };
		OUT-AIR-FLOW : { non-fluent, real, default = 0.05 };
		ZONE-VOL___z1 : { non-fluent, real, default = 255 };
		ZONE-VOL___z2 : { non-fluent, real, default = 255 };
		ZONE-VOL___z3 : { non-fluent, real, default = 255 };
		ZONE-VOL___z4 : { non-fluent, real, default = 255 };
		ZONE-VOL___z5 : { non-fluent, real, default = 255 };
		HEATER-VOL___h1 : { non-fluent, real, default = 25.5 };
		HEATER-VOL___h2 : { non-fluent, real, default = 25.5 };
		HEATER-VOL___h3 : { non-fluent, real, default = 25.5 };
		HEATER-VOL___h4 : { non-fluent, real, default = 25.5 };
		HEATER-VOL___h5 : { non-fluent, real, default = 25.5 };
		K : { non-fluent, real, default = 1195.95 };
		K-dz : { non-fluent, real, default = 0.001 };
		K-dh : { non-fluent, real, default = 0.003 };
		DELTA-T : { non-fluent, real, default = 0.1 };
		SIGMA___z1 : { non-fluent, real, default = 0.1 };
		SIGMA___z2 : { non-fluent, real, default = 0.1 };
		SIGMA___z3 : { non-fluent, real, default = 0.1 };
		SIGMA___z4 : { non-fluent, real, default = 0.1 };
		SIGMA___z5 : { non-fluent, real, default = 0.1 };
		P-SWITCH___z1 : { non-fluent, real, default = 0.0 };
		P-SWITCH___z2 : { non-fluent, real, default = 0.0 };
		P-SWITCH___z3 : { non-fluent, real, default = 0.0 };
		P-SWITCH___z4 : { non-fluent, real, default = 0.0 };
		P-SWITCH___z5 : { non-fluent, real, default = 0.0 };
		CLIPPING-MIN : { non-fluent, real, default = -1000000.0 };
		CLIPPING-MAX : { non-fluent, real, default = 1000000.0 };

		temp-1___h1 : { interm-fluent, real };
		temp-1___h2 : { interm-fluent, real };
		temp-1___h3 : { interm-fluent, real };
		temp-1___h4 : { interm-fluent, real };
		temp-1___h5 : { interm-fluent, real };

		temp-zone___z1 : { state-fluent, real, default = 1 };
		temp-zone___z2 : { state-fluent, real, default = 1 };
		temp-zone___z3 : { state-fluent, real, default = 1 };
		temp-zone___z4 : { state-fluent, real, default = 1 };
		temp-zone___z5 : { state-fluent, real, default = 1 };
		temp-heater___h1 : { state-fluent, real, default = 1 };
		temp-heater___h2 : { state-fluent, real, default = 1 };
		temp-heater___h3 : { state-fluent, real, default = 1 };
		temp-heater___h4 : { state-fluent, real, default = 1 };
		temp-heater___h5 : { state-fluent, real, default = 1 };
		occupied___z1 : { state-fluent, bool, default = true };
		occupied___z2 : { state-fluent, bool, default = true };
		occupied___z3 : { state-fluent, bool, default = true };
		occupied___z4 : { state-fluent, bool, default = true };
		occupied___z5 : { state-fluent, bool, default = true };

		fan-in___z1 : { action-fluent, real, default = 1 };
		fan-in___z2 : { action-fluent, real, default = 1 };
		fan-in___z3 : { action-fluent, real, default = 1 };
		fan-in___z4 : { action-fluent, real, default = 1 };
		fan-in___z5 : { action-fluent, real, default = 1 };
		heat-input___h1 : { action-fluent, real, default = 0 };
		heat-input___h2 : { action-fluent, real, default = 0 };
		heat-input___h3 : { action-fluent, real, default = 0 };
		heat-input___h4 : { action-fluent, real, default = 0 };
		heat-input___h5 : { action-fluent, real, default = 0 };
	};

	cpfs {

		temp-1___h1 = if (( ADJ-HEATER___h1__z1 + ADJ-HEATER___h1__z2 + ADJ-HEATER___h1__z3 + ADJ-HEATER___h1__z4 + ADJ-HEATER___h1__z5 ) > 0)
			then ( ( 1 / ( ADJ-HEATER___h1__z1 + ADJ-HEATER___h1__z2 + ADJ-HEATER___h1__z3 + ADJ-HEATER___h1__z4 + ADJ-HEATER___h1__z5 ) ) * ( ( ( temp-zone___z1 + ( TEMP-OUT - ( ( temp-zone___z1 * OUT-AIR-FLOW ) / fan-in___z1 ) ) ) * ADJ-HEATER___h1__z1 ) + ( ( temp-zone___z2 + ( TEMP-OUT - ( ( temp-zone___z2 * OUT-AIR-FLOW ) / fan-in___z2 ) ) ) * ADJ-HEATER___h1__z2 ) + ( ( temp-zone___z3 + ( TEMP-OUT - ( ( temp-zone___z3 * OUT-AIR-FLOW ) / fan-in___z3 ) ) ) * ADJ-HEATER___h1__z3 ) + ( ( temp-zone___z4 + ( TEMP-OUT - ( ( temp-zone___z4 * OUT-AIR-FLOW ) / fan-in___z4 ) ) ) * ADJ-HEATER___h1__z4 ) + ( ( temp-zone___z5 + ( TEMP-OUT - ( ( temp-zone___z5 * OUT-AIR-FLOW ) / fan-in___z5 ) ) ) * ADJ-HEATER___h1__z5 ) ) )
			else 0;

		temp-1___h2 = if (( ADJ-HEATER___h2__z1 + ADJ-HEATER___h2__z2 + ADJ-HEATER___h2__z3 + ADJ-HEATER___h2__z4 + ADJ-HEATER___h2__z5 ) > 0)
			then ( ( 1 / ( ADJ-HEATER___h2__z1 + ADJ-HEATER___h2__z2 + ADJ-HEATER___h2__z3 + ADJ-HEATER___h2__z4 + ADJ-HEATER___h2__z5 ) ) * ( ( ( temp-zone___z1 + ( TEMP-OUT - ( ( temp-zone___z1 * OUT-AIR-FLOW ) / fan-in___z1 ) ) ) * ADJ-HEATER___h2__z1 ) + ( ( temp-zone___z2 + ( TEMP-OUT - ( ( temp-zone___z2 * OUT-AIR-FLOW ) / fan-in___z2 ) ) ) * ADJ-HEATER___h2__z2 ) + ( ( temp-zone___z3 + ( TEMP-OUT - ( ( temp-zone___z3 * OUT-AIR-FLOW ) / fan-in___z3 ) ) ) * ADJ-HEATER___h2__z3 ) + ( ( temp-zone___z4 + ( TEMP-OUT - ( ( temp-zone___z4 * OUT-AIR-FLOW ) / fan-in___z4 ) ) ) * ADJ-HEATER___h2__z4 ) + ( ( temp-zone___z5 + ( TEMP-OUT - ( ( temp-zone___z5 * OUT-AIR-FLOW ) / fan-in___z5 ) ) ) * ADJ-HEATER___h2__z5 ) ) )
			else 0;

		temp-1___h3 = if (( ADJ-HEATER___h3__z1 + ADJ-HEATER___h3__z2 + ADJ-HEATER___h3__z3 + ADJ-HEATER___h3__z4 + ADJ-HEATER___h3__z5 ) > 0)
			then ( ( 1 / ( ADJ-HEATER___h3__z1 + ADJ-HEATER___h3__z2 + ADJ-HEATER___h3__z3 + ADJ-HEATER___h3__z4 + ADJ-HEATER___h3__z5 ) ) * ( ( ( temp-zone___z1 + ( TEMP-OUT - ( ( temp-zone___z1 * OUT-AIR-FLOW ) / fan-in___z1 ) ) ) * ADJ-HEATER___h3__z1 ) + ( ( temp-zone___z2 + ( TEMP-OUT - ( ( temp-zone___z2 * OUT-AIR-FLOW ) / fan-in___z2 ) ) ) * ADJ-HEATER___h3__z2 ) + ( ( temp-zone___z3 + ( TEMP-OUT - ( ( temp-zone___z3 * OUT-AIR-FLOW ) / fan-in___z3 ) ) ) * ADJ-HEATER___h3__z3 ) + ( ( temp-zone___z4 + ( TEMP-OUT - ( ( temp-zone___z4 * OUT-AIR-FLOW ) / fan-in___z4 ) ) ) * ADJ-HEATER___h3__z4 ) + ( ( temp-zone___z5 + ( TEMP-OUT - ( ( temp-zone___z5 * OUT-AIR-FLOW ) / fan-in___z5 ) ) ) * ADJ-HEATER___h3__z5 ) ) )
			else 0;

		temp-1___h4 = if (( ADJ-HEATER___h4__z1 + ADJ-HEATER___h4__z2 + ADJ-HEATER___h4__z3 + ADJ-HEATER___h4__z4 + ADJ-HEATER___h4__z5 ) > 0)
			then ( ( 1 / ( ADJ-HEATER___h4__z1 + ADJ-HEATER___h4__z2 + ADJ-HEATER___h4__z3 + ADJ-HEATER___h4__z4 + ADJ-HEATER___h4__z5 ) ) * ( ( ( temp-zone___z1 + ( TEMP-OUT - ( ( temp-zone___z1 * OUT-AIR-FLOW ) / fan-in___z1 ) ) ) * ADJ-HEATER___h4__z1 ) + ( ( temp-zone___z2 + ( TEMP-OUT - ( ( temp-zone___z2 * OUT-AIR-FLOW ) / fan-in___z2 ) ) ) * ADJ-HEATER___h4__z2 ) + ( ( temp-zone___z3 + ( TEMP-OUT - ( ( temp-zone___z3 * OUT-AIR-FLOW ) / fan-in___z3 ) ) ) * ADJ-HEATER___h4__z3 ) + ( ( temp-zone___z4 + ( TEMP-OUT - ( ( temp-zone___z4 * OUT-AIR-FLOW ) / fan-in___z4 ) ) ) * ADJ-HEATER___h4__z4 ) + ( ( temp-zone___z5 + ( TEMP-OUT - ( ( temp-zone___z5 * OUT-AIR-FLOW ) / fan-in___z5 ) ) ) * ADJ-HEATER___h4__z5 ) ) )
			else 0;

		temp-1___h5 = if (( ADJ-HEATER___h5__z1 + ADJ-HEATER___h5__z2 + ADJ-HEATER___h5__z3 + ADJ-HEATER___h5__z4 + ADJ-HEATER___h5__z5 ) > 0)
			then ( ( 1 / ( ADJ-HEATER___h5__z1 + ADJ-HEATER___h5__z2 + ADJ-HEATER___h5__z3 + ADJ-HEATER___h5__z4 + ADJ-HEATER___h5__z5 ) ) * ( ( ( temp-zone___z1 + ( TEMP-OUT - ( ( temp-zone___z1 * OUT-AIR-FLOW ) / fan-in___z1 ) ) ) * ADJ-HEATER___h5__z1 ) + ( ( temp-zone___z2 + ( TEMP-OUT - ( ( temp-zone___z2 * OUT-AIR-FLOW ) / fan-in___z2 ) ) ) * ADJ-HEATER___h5__z2 ) + ( ( temp-zone___z3 + ( TEMP-OUT - ( ( temp-zone___z3 * OUT-AIR-FLOW ) / fan-in___z3 ) ) ) * ADJ-HEATER___h5__z3 ) + ( ( temp-zone___z4 + ( TEMP-OUT - ( ( temp-zone___z4 * OUT-AIR-FLOW ) / fan-in___z4 ) ) ) * ADJ-HEATER___h5__z4 ) + ( ( temp-zone___z5 + ( TEMP-OUT - ( ( temp-zone___z5 * OUT-AIR-FLOW ) / fan-in___z5 ) ) ) * ADJ-HEATER___h5__z5 ) ) )
			else 0;

		temp-zone___z1' = temp-zone___z1;

		temp-zone___z2' = temp-zone___z2;

		temp-zone___z3' = temp-zone___z3;

		temp-zone___z4' = temp-zone___z4;

		temp-zone___z5' = temp-zone___z5;

		temp-heater___h1' = ( ( -K-dh ) * pow[temp-heater___h1, 2] ) + ( if (( ADJ-HEATER___h1__z1 + ADJ-HEATER___h1__z2 + ADJ-HEATER___h1__z3 + ADJ-HEATER___h1__z4 + ADJ-HEATER___h1__z5 ) > 0)
			then ( ( temp-heater___h1 + ( ( ( ( DELTA-T / HEATER-VOL___h1 ) * ( ( ADJ-HEATER___h1__z1 * fan-in___z1 ) + ( ADJ-HEATER___h1__z2 * fan-in___z2 ) + ( ADJ-HEATER___h1__z3 * fan-in___z3 ) + ( ADJ-HEATER___h1__z4 * fan-in___z4 ) + ( ADJ-HEATER___h1__z5 * fan-in___z5 ) ) ) / ( ADJ-HEATER___h1__z1 + ADJ-HEATER___h1__z2 + ADJ-HEATER___h1__z3 + ADJ-HEATER___h1__z4 + ADJ-HEATER___h1__z5 ) ) * ( temp-1___h1 - TEMP-OUT ) ) ) + ( ( DELTA-T / ( K * HEATER-VOL___h1 ) ) * heat-input___h1 ) )
			else ( temp-heater___h1 + ( ( DELTA-T / ( K * HEATER-VOL___h1 ) ) * heat-input___h1 ) ) );

		temp-heater___h2' = ( ( -K-dh ) * pow[temp-heater___h2, 2] ) + ( if (( ADJ-HEATER___h2__z1 + ADJ-HEATER___h2__z2 + ADJ-HEATER___h2__z3 + ADJ-HEATER___h2__z4 + ADJ-HEATER___h2__z5 ) > 0)
			then ( ( temp-heater___h2 + ( ( ( ( DELTA-T / HEATER-VOL___h2 ) * ( ( ADJ-HEATER___h2__z1 * fan-in___z1 ) + ( ADJ-HEATER___h2__z2 * fan-in___z2 ) + ( ADJ-HEATER___h2__z3 * fan-in___z3 ) + ( ADJ-HEATER___h2__z4 * fan-in___z4 ) + ( ADJ-HEATER___h2__z5 * fan-in___z5 ) ) ) / ( ADJ-HEATER___h2__z1 + ADJ-HEATER___h2__z2 + ADJ-HEATER___h2__z3 + ADJ-HEATER___h2__z4 + ADJ-HEATER___h2__z5 ) ) * ( temp-1___h2 - TEMP-OUT ) ) ) + ( ( DELTA-T / ( K * HEATER-VOL___h2 ) ) * heat-input___h2 ) )
			else ( temp-heater___h2 + ( ( DELTA-T / ( K * HEATER-VOL___h2 ) ) * heat-input___h2 ) ) );

		temp-heater___h3' = ( ( -K-dh ) * pow[temp-heater___h3, 2] ) + ( if (( ADJ-HEATER___h3__z1 + ADJ-HEATER___h3__z2 + ADJ-HEATER___h3__z3 + ADJ-HEATER___h3__z4 + ADJ-HEATER___h3__z5 ) > 0)
			then ( ( temp-heater___h3 + ( ( ( ( DELTA-T / HEATER-VOL___h3 ) * ( ( ADJ-HEATER___h3__z1 * fan-in___z1 ) + ( ADJ-HEATER___h3__z2 * fan-in___z2 ) + ( ADJ-HEATER___h3__z3 * fan-in___z3 ) + ( ADJ-HEATER___h3__z4 * fan-in___z4 ) + ( ADJ-HEATER___h3__z5 * fan-in___z5 ) ) ) / ( ADJ-HEATER___h3__z1 + ADJ-HEATER___h3__z2 + ADJ-HEATER___h3__z3 + ADJ-HEATER___h3__z4 + ADJ-HEATER___h3__z5 ) ) * ( temp-1___h3 - TEMP-OUT ) ) ) + ( ( DELTA-T / ( K * HEATER-VOL___h3 ) ) * heat-input___h3 ) )
			else ( temp-heater___h3 + ( ( DELTA-T / ( K * HEATER-VOL___h3 ) ) * heat-input___h3 ) ) );

		temp-heater___h4' = ( ( -K-dh ) * pow[temp-heater___h4, 2] ) + ( if (( ADJ-HEATER___h4__z1 + ADJ-HEATER___h4__z2 + ADJ-HEATER___h4__z3 + ADJ-HEATER___h4__z4 + ADJ-HEATER___h4__z5 ) > 0)
			then ( ( temp-heater___h4 + ( ( ( ( DELTA-T / HEATER-VOL___h4 ) * ( ( ADJ-HEATER___h4__z1 * fan-in___z1 ) + ( ADJ-HEATER___h4__z2 * fan-in___z2 ) + ( ADJ-HEATER___h4__z3 * fan-in___z3 ) + ( ADJ-HEATER___h4__z4 * fan-in___z4 ) + ( ADJ-HEATER___h4__z5 * fan-in___z5 ) ) ) / ( ADJ-HEATER___h4__z1 + ADJ-HEATER___h4__z2 + ADJ-HEATER___h4__z3 + ADJ-HEATER___h4__z4 + ADJ-HEATER___h4__z5 ) ) * ( temp-1___h4 - TEMP-OUT ) ) ) + ( ( DELTA-T / ( K * HEATER-VOL___h4 ) ) * heat-input___h4 ) )
			else ( temp-heater___h4 + ( ( DELTA-T / ( K * HEATER-VOL___h4 ) ) * heat-input___h4 ) ) );

		temp-heater___h5' = ( ( -K-dh ) * pow[temp-heater___h5, 2] ) + ( if (( ADJ-HEATER___h5__z1 + ADJ-HEATER___h5__z2 + ADJ-HEATER___h5__z3 + ADJ-HEATER___h5__z4 + ADJ-HEATER___h5__z5 ) > 0)
			then ( ( temp-heater___h5 + ( ( ( ( DELTA-T / HEATER-VOL___h5 ) * ( ( ADJ-HEATER___h5__z1 * fan-in___z1 ) + ( ADJ-HEATER___h5__z2 * fan-in___z2 ) + ( ADJ-HEATER___h5__z3 * fan-in___z3 ) + ( ADJ-HEATER___h5__z4 * fan-in___z4 ) + ( ADJ-HEATER___h5__z5 * fan-in___z5 ) ) ) / ( ADJ-HEATER___h5__z1 + ADJ-HEATER___h5__z2 + ADJ-HEATER___h5__z3 + ADJ-HEATER___h5__z4 + ADJ-HEATER___h5__z5 ) ) * ( temp-1___h5 - TEMP-OUT ) ) ) + ( ( DELTA-T / ( K * HEATER-VOL___h5 ) ) * heat-input___h5 ) )
			else ( temp-heater___h5 + ( ( DELTA-T / ( K * HEATER-VOL___h5 ) ) * heat-input___h5 ) ) );

		occupied___z1' = occupied___z1;

		occupied___z2' = occupied___z2;

		occupied___z3' = occupied___z3;

		occupied___z4' = occupied___z4;

		occupied___z5' = occupied___z5;
	};

	reward = ( ( -( ( HEAT-COST___h1 * pow[heat-input___h1, 2] ) + ( HEAT-COST___h2 * pow[heat-input___h2, 2] ) + ( HEAT-COST___h3 * pow[heat-input___h3, 2] ) + ( HEAT-COST___h4 * pow[heat-input___h4, 2] ) + ( HEAT-COST___h5 * pow[heat-input___h5, 2] ) ) ) - ( AIR-COST * ( pow[fan-in___z1, 2] + pow[fan-in___z2, 2] + pow[fan-in___z3, 2] + pow[fan-in___z4, 2] + pow[fan-in___z5, 2] ) ) ) - ( ZONE-DISCOMFORT-PENALTY * ( ( if (occupied___z1 ^ ( temp-zone___z1 < TEMP-ZONE-MIN ))
			then pow[temp-zone___z1 - TEMP-ZONE-MIN, 2]
			else ( if (occupied___z1 ^ ( temp-zone___z1 > TEMP-ZONE-MAX ))
				then pow[temp-zone___z1 - TEMP-ZONE-MAX, 2]
				else 0.0 ) ) + ( if (occupied___z2 ^ ( temp-zone___z2 < TEMP-ZONE-MIN ))
			then pow[temp-zone___z2 - TEMP-ZONE-MIN, 2]
			else ( if (occupied___z2 ^ ( temp-zone___z2 > TEMP-ZONE-MAX ))
				then pow[temp-zone___z2 - TEMP-ZONE-MAX, 2]
				else 0.0 ) ) + ( if (occupied___z3 ^ ( temp-zone___z3 < TEMP-ZONE-MIN ))
			then pow[temp-zone___z3 - TEMP-ZONE-MIN, 2]
			else ( if (occupied___z3 ^ ( temp-zone___z3 > TEMP-ZONE-MAX ))
				then pow[temp-zone___z3 - TEMP-ZONE-MAX, 2]
				else 0.0 ) ) + ( if (occupied___z4 ^ ( temp-zone___z4 < TEMP-ZONE-MIN ))
			then pow[temp-zone___z4 - TEMP-ZONE-MIN, 2]
			else ( if (occupied___z4 ^ ( temp-zone___z4 > TEMP-ZONE-MAX ))
				then pow[temp-zone___z4 - TEMP-ZONE-MAX, 2]
				else 0.0 ) ) + ( if (occupied___z5 ^ ( temp-zone___z5 < TEMP-ZONE-MIN ))
			then pow[temp-zone___z5 - TEMP-ZONE-MIN, 2]
			else ( if (occupied___z5 ^ ( temp-zone___z5 > TEMP-ZONE-MAX ))
				then pow[temp-zone___z5 - TEMP-ZONE-MAX, 2]
				else 0.0 ) ) ) );

	state-invariants {
		( temp-zone___z1 <= CLIPPING-MAX ) ^ ( temp-zone___z2 <= CLIPPING-MAX ) ^ ( temp-zone___z3 <= CLIPPING-MAX ) ^ ( temp-zone___z4 <= CLIPPING-MAX ) ^ ( temp-zone___z5 <= CLIPPING-MAX );
		( temp-zone___z1 >= CLIPPING-MAX ) ^ ( temp-zone___z2 >= CLIPPING-MAX ) ^ ( temp-zone___z3 >= CLIPPING-MAX ) ^ ( temp-zone___z4 >= CLIPPING-MAX ) ^ ( temp-zone___z5 >= CLIPPING-MAX );
		( temp-heater___h1 <= CLIPPING-MAX ) ^ ( temp-heater___h2 <= CLIPPING-MAX ) ^ ( temp-heater___h3 <= CLIPPING-MAX ) ^ ( temp-heater___h4 <= CLIPPING-MAX ) ^ ( temp-heater___h5 <= CLIPPING-MAX );
		( temp-heater___h1 >= CLIPPING-MIN ) ^ ( temp-heater___h2 >= CLIPPING-MIN ) ^ ( temp-heater___h3 >= CLIPPING-MIN ) ^ ( temp-heater___h4 >= CLIPPING-MIN ) ^ ( temp-heater___h5 >= CLIPPING-MIN );
	};

	action-preconditions {
		( fan-in___z1 >= OUT-AIR-FLOW ) ^ ( fan-in___z2 >= OUT-AIR-FLOW ) ^ ( fan-in___z3 >= OUT-AIR-FLOW ) ^ ( fan-in___z4 >= OUT-AIR-FLOW ) ^ ( fan-in___z5 >= OUT-AIR-FLOW );
		( fan-in___z1 <= CLIPPING-MAX ) ^ ( fan-in___z2 <= CLIPPING-MAX ) ^ ( fan-in___z3 <= CLIPPING-MAX ) ^ ( fan-in___z4 <= CLIPPING-MAX ) ^ ( fan-in___z5 <= CLIPPING-MAX );
		( heat-input___h1 <= CLIPPING-MAX ) ^ ( heat-input___h2 <= CLIPPING-MAX ) ^ ( heat-input___h3 <= CLIPPING-MAX ) ^ ( heat-input___h4 <= CLIPPING-MAX ) ^ ( heat-input___h5 <= CLIPPING-MAX );
		( heat-input___h1 >= CLIPPING-MIN ) ^ ( heat-input___h2 >= CLIPPING-MIN ) ^ ( heat-input___h3 >= CLIPPING-MIN ) ^ ( heat-input___h4 >= CLIPPING-MIN ) ^ ( heat-input___h5 >= CLIPPING-MIN );
	};
}